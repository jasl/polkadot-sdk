[package]
name = "polkadot-node-metrics"
description = "Subsystem metric helpers"
version = "7.0.0"
authors.workspace = true
edition.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
futures = { workspace = true }
futures-timer = { workspace = true }
gum = { package = "tracing-gum", path = "../gum" }

metered = { package = "prioritized-metered-channel", version = "0.6.1", default-features = false, features = ["futures_channel"] }
# Both `sc-service` and `sc-cli` are required by runtime metrics `logger_hook()`.
sc-service = { path = "../../../substrate/client/service" }
sc-cli = { path = "../../../substrate/client/cli" }

substrate-prometheus-endpoint = { path = "../../../substrate/utils/prometheus" }
sc-tracing = { path = "../../../substrate/client/tracing" }
codec = { workspace = true, default-features = true }
primitives = { package = "polkadot-primitives", path = "../../primitives" }
bs58 = { workspace = true, default-features = true, features = ["alloc"] }
log = { workspace = true, default-features = true }

[dev-dependencies]
assert_cmd = { workspace = true }
tempfile = { workspace = true }
hyper = { workspace = true, default-features = false, features = ["http1", "tcp"] }
tokio = { workspace = true, default-features = true }
polkadot-test-service = { path = "../test/service", features = ["runtime-metrics"] }
substrate-test-utils = { path = "../../../substrate/test-utils" }
sc-service = { path = "../../../substrate/client/service" }
sp-keyring = { path = "../../../substrate/primitives/keyring" }
prometheus-parse = { version = "0.2.2" }

[features]
default = []
runtime-metrics = []
runtime-benchmarks = [
	"polkadot-test-service/runtime-benchmarks",
	"primitives/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
]
