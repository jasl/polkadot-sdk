[package]
name = "polkadot-availability-recovery"
description = "The Availability Recovery subsystem. Handles requests for recovering the availability data of included candidates."
version = "7.0.0"
authors.workspace = true
edition.workspace = true
license.workspace = true

[lints]
workspace = true

[dependencies]
futures = { workspace = true }
tokio = { workspace = true, default-features = true }
schnellru = { workspace = true }
rand = { workspace = true, default-features = true }
fatality = "0.0.6"
thiserror = { workspace = true }
async-trait = { workspace = true }
gum = { package = "tracing-gum", path = "../../gum" }

polkadot-erasure-coding = { path = "../../../erasure-coding" }
polkadot-primitives = { path = "../../../primitives" }
polkadot-node-primitives = { path = "../../primitives" }
polkadot-node-subsystem = { path = "../../subsystem" }
polkadot-node-subsystem-util = { path = "../../subsystem-util" }
polkadot-node-network-protocol = { path = "../protocol" }
parity-scale-codec = { workspace = true, default-features = false, features = ["derive"] }
sc-network = { path = "../../../../substrate/client/network" }

[dev-dependencies]
assert_matches = { workspace = true }
env_logger = { workspace = true }
futures-timer = { workspace = true }
log = { workspace = true, default-features = true }

sp-core = { path = "../../../../substrate/primitives/core" }
sp-keyring = { path = "../../../../substrate/primitives/keyring" }
sp-application-crypto = { path = "../../../../substrate/primitives/application-crypto" }
sc-network = { path = "../../../../substrate/client/network" }

polkadot-node-subsystem-test-helpers = { path = "../../subsystem-test-helpers" }
polkadot-primitives-test-helpers = { path = "../../../primitives/test-helpers" }
polkadot-subsystem-bench = { path = "../../subsystem-bench" }

[[bench]]
name = "availability-recovery-regression-bench"
path = "benches/availability-recovery-regression-bench.rs"
harness = false
required-features = ["subsystem-benchmarks"]

[features]
subsystem-benchmarks = []
