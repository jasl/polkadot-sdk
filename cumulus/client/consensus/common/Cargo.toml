[package]
name = "cumulus-client-consensus-common"
description = "Cumulus specific common consensus implementations"
version = "0.7.0"
authors.workspace = true
edition.workspace = true
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"

[lints]
workspace = true

[dependencies]
async-trait = { workspace = true }
codec = { workspace = true, default-features = true, features = ["derive"] }
dyn-clone = "1.0.16"
futures = { workspace = true }
log = { workspace = true, default-features = true }
tracing = { workspace = true, default-features = true }

# Substrate
sc-client-api = { path = "../../../../substrate/client/api" }
sc-consensus = { path = "../../../../substrate/client/consensus/common" }
sc-consensus-babe = { path = "../../../../substrate/client/consensus/babe" }
sp-blockchain = { path = "../../../../substrate/primitives/blockchain" }
sp-consensus = { path = "../../../../substrate/primitives/consensus/common" }
sp-consensus-slots = { path = "../../../../substrate/primitives/consensus/slots" }
sp-core = { path = "../../../../substrate/primitives/core" }
sp-runtime = { path = "../../../../substrate/primitives/runtime" }
sp-timestamp = { path = "../../../../substrate/primitives/timestamp" }
sp-trie = { path = "../../../../substrate/primitives/trie" }
substrate-prometheus-endpoint = { path = "../../../../substrate/utils/prometheus" }

# Polkadot
polkadot-primitives = { path = "../../../../polkadot/primitives" }

# Cumulus
cumulus-primitives-core = { path = "../../../primitives/core" }
cumulus-relay-chain-interface = { path = "../../relay-chain-interface" }
cumulus-client-pov-recovery = { path = "../../pov-recovery" }
schnellru = { workspace = true }

[dev-dependencies]
futures-timer = { workspace = true }

# Substrate
sp-tracing = { path = "../../../../substrate/primitives/tracing" }

# Cumulus
cumulus-test-client = { path = "../../../test/client" }
cumulus-test-relay-sproof-builder = { path = "../../../test/relay-sproof-builder" }
